let
    Source = Csv.Document(Binary.Buffer(Web.Contents("https://pricing.us-east-1.amazonaws.com/offers/v1.0/aws/AmazonEC2/current/index.csv")),[Delimiter=",", Columns=91, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", type text}, {"Column8", type text}, {"Column9", type text}, {"Column10", type text}, {"Column11", type text}, {"Column12", type text}, {"Column13", type text}, {"Column14", type text}, {"Column15", type text}, {"Column16", type text}, {"Column17", type text}, {"Column18", type text}, {"Column19", type text}, {"Column20", type text}, {"Column21", type text}, {"Column22", type text}, {"Column23", type text}, {"Column24", type text}, {"Column25", type text}, {"Column26", type text}, {"Column27", type text}, {"Column28", type text}, {"Column29", type text}, {"Column30", type text}, {"Column31", type text}, {"Column32", type text}, {"Column33", type text}, {"Column34", type text}, {"Column35", type text}, {"Column36", type text}, {"Column37", type text}, {"Column38", type text}, {"Column39", type text}, {"Column40", type text}, {"Column41", type text}, {"Column42", type text}, {"Column43", type text}, {"Column44", type text}, {"Column45", type text}, {"Column46", type text}, {"Column47", type text}, {"Column48", type text}, {"Column49", type text}, {"Column50", type text}, {"Column51", type text}, {"Column52", type text}, {"Column53", type text}, {"Column54", type text}, {"Column55", type text}, {"Column56", type text}, {"Column57", type text}, {"Column58", type text}, {"Column59", type text}, {"Column60", type text}, {"Column61", type text}, {"Column62", type text}, {"Column63", type text}, {"Column64", type text}, {"Column65", type text}, {"Column66", type text}, {"Column67", type text}, {"Column68", type text}, {"Column69", type text}, {"Column70", type text}, {"Column71", type text}, {"Column72", type text}, {"Column73", type text}, {"Column74", type text}, {"Column75", type text}, {"Column76", type text}, {"Column77", type text}, {"Column78", type text}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type", each not Text.Contains([Column1], "FormatVersion") and not Text.Contains([Column1], "Disclaimer") and not Text.Contains([Column1], "Publication Date") and not Text.Contains([Column1], "Version") and not Text.Contains([Column1], "OfferCode")),
    #"Promoted Headers" = Table.PromoteHeaders(#"Filtered Rows", [PromoteAllScalars=true]),
    #"Filtered Rows3" = Table.SelectRows(#"Promoted Headers", each [Product Family] = "Dedicated Host" and [Operating System] = "Linux"),
    #"Changed Type1" = Table.TransformColumnTypes(#"Filtered Rows3",{{"SKU", type text}, {"OfferTermCode", type text}, {"RateCode", type text}, {"TermType", type text}, {"PriceDescription", type text}, {"EffectiveDate", type date}, {"StartingRange", Int64.Type}, {"EndingRange", type text}, {"Unit", type text}, {"PricePerUnit", type number}, {"Currency", type text}, {"LeaseContractLength", type text}, {"PurchaseOption", type text}, {"OfferingClass", type text}, {"Product Family", type text}, {"serviceCode", type text}, {"Location", type text}, {"Location Type", type text}, {"Instance Type", type text}, {"Current Generation", type text}, {"Instance Family", type text}, {"vCPU", Int64.Type}, {"Physical Processor", type text}, {"Clock Speed", type text}, {"Memory", type text}, {"Storage", type text}, {"Network Performance", type text}, {"Processor Architecture", type text}, {"Storage Media", type text}, {"Volume Type", type text}, {"Max Volume Size", type text}, {"Max IOPS/volume", type text}, {"Max IOPS Burst Performance", type text}, {"Max throughput/volume", type text}, {"Provisioned", type text}, {"Tenancy", type text}, {"EBS Optimized", type text}, {"Operating System", type text}, {"License Model", type text}, {"Group", type text}, {"Group Description", type text}, {"Transfer Type", type text}, {"From Location", type text}, {"From Location Type", type text}, {"To Location", type text}, {"To Location Type", type text}, {"usageType", type text}, {"operation", type text}, {"CapacityStatus", type text}, {"Dedicated EBS Throughput", type text}, {"ECU", type text}, {"Elastic Graphics Type", type text}, {"Enhanced Networking Supported", type text}, {"GPU", Int64.Type}, {"GPU Memory", type text}, {"Instance", type text}, {"Instance Capacity - 10xlarge", type text}, {"Instance Capacity - 12xlarge", type text}, {"Instance Capacity - 16xlarge", type text}, {"Instance Capacity - 18xlarge", type text}, {"Instance Capacity - 24xlarge", type text}, {"Instance Capacity - 2xlarge", Int64.Type}, {"Instance Capacity - 32xlarge", type text}, {"Instance Capacity - 4xlarge", Int64.Type}, {"Instance Capacity - 8xlarge", type text}, {"Instance Capacity - 9xlarge", type text}, {"Instance Capacity - large", Int64.Type}, {"Instance Capacity - medium", Int64.Type}, {"Instance Capacity - xlarge", Int64.Type}, {"instanceSKU", type text}, {"Intel AVX Available", type text}, {"Intel AVX2 Available", type text}, {"Intel Turbo Available", type text}, {"Physical Cores", Int64.Type}, {"Pre Installed S/W", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type1",{"Currency", "serviceCode", "Location Type", "Processor Architecture", "From Location Type", "SKU", "OfferTermCode", "RateCode", "Storage Media", "Volume Type", "Max Volume Size", "Max IOPS/volume", "Max IOPS Burst Performance", "Max throughput/volume", "Provisioned", "usageType", "operation"}),
    #"Filtered Rows2" = Table.SelectRows(#"Removed Columns", each ([Product Family] = "Compute Instance" or [Product Family] = "Dedicated Host" or [Product Family] = "Compute Instance (bare metal)" or [Product Family] = "CPU Credits" or [Product Family] = "Fee")),
    #"Filtered Rows5" = Table.SelectRows(#"Filtered Rows2", each not Text.Contains([PriceDescription], "Unused Res")),
    #"Filtered Rows4" = Table.SelectRows(#"Filtered Rows5", each [PricePerUnit] > 0),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows4","No License required","LI",Replacer.ReplaceText,{"License Model"}),
    #"Replaced Value17" = Table.ReplaceValue(#"Replaced Value"," yr","yr",Replacer.ReplaceText,{"LeaseContractLength"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value17","Bring your own license","BYOL",Replacer.ReplaceText,{"License Model"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","Windows","Win",Replacer.ReplaceText,{"Operating System"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","Quantity","Qty",Replacer.ReplaceText,{"Unit"}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value3","Reserved","Rsv'd",Replacer.ReplaceText,{"TermType"}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5","standard","std",Replacer.ReplaceText,{"OfferingClass"}),
    #"Replaced Value7" = Table.ReplaceValue(#"Replaced Value6","convertible","cnvt",Replacer.ReplaceText,{"OfferingClass"}),
    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value7"," GiB","",Replacer.ReplaceText,{"Memory"}),
    #"Replaced Value9" = Table.ReplaceValue(#"Replaced Value8","Up to 3.0","3.0(<=)",Replacer.ReplaceText,{"Clock Speed"}),
    #"Replaced Value10" = Table.ReplaceValue(#"Replaced Value9","Up to 3.3","3.3(<=)",Replacer.ReplaceText,{"Clock Speed"}),
    #"Replaced Value11" = Table.ReplaceValue(#"Replaced Value10","  "," ",Replacer.ReplaceText,{"Clock Speed"}),
    #"Replaced Value12" = Table.ReplaceValue(#"Replaced Value11"," x ","x",Replacer.ReplaceText,{"Storage"}),
    #"Replaced Value13" = Table.ReplaceValue(#"Replaced Value12","NVMe SSD","NVMe",Replacer.ReplaceText,{"Storage"}),
    #"Replaced Value14" = Table.ReplaceValue(#"Replaced Value13"," Gigabit","gbps",Replacer.ReplaceText,{"Network Performance"}),
    #"Replaced Value15" = Table.ReplaceValue(#"Replaced Value14","Up to 10gbps","10gbps(<=)",Replacer.ReplaceText,{"Network Performance"}),
    #"Replaced Value16" = Table.ReplaceValue(#"Replaced Value15","Up to 25gbps","25gbps(<=)",Replacer.ReplaceText,{"Network Performance"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Replaced Value16",{"Physical Cores", "To Location Type", "To Location", "From Location", "Transfer Type", "Group Description", "Group"}),
    #"Replaced Value18" = Table.ReplaceValue(#"Removed Columns1","NA","NA/BYOL",Replacer.ReplaceText,{"Pre Installed S/W"}),
    #"Replaced Value22" = Table.ReplaceValue(#"Replaced Value18","PartialUpfront","Partial Upfront",Replacer.ReplaceText,{"PurchaseOption"}),
    #"Replaced Value20" = Table.ReplaceValue(#"Replaced Value22","NoUpfront","No Upfront",Replacer.ReplaceText,{"PurchaseOption"}),
    #"Replaced Value21" = Table.ReplaceValue(#"Replaced Value20","AllUpfront","All Upfront",Replacer.ReplaceText,{"PurchaseOption"}),
    #"Replaced Value24" = Table.ReplaceValue(#"Replaced Value21","(Amazon VPC)","(VPC)",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value25" = Table.ReplaceValue(#"Replaced Value24","SQL Server","SQL",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value26" = Table.ReplaceValue(#"Replaced Value25","Windows","Win",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value27" = Table.ReplaceValue(#"Replaced Value26","Enterprise","Ent",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value28" = Table.ReplaceValue(#"Replaced Value27","Standard","Std",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value29" = Table.ReplaceValue(#"Replaced Value28","with","w/",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value30" = Table.ReplaceValue(#"Replaced Value29","reserved","Rsv'd",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value31" = Table.ReplaceValue(#"Replaced Value30","Dedicated Host","Ded Host",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value32" = Table.ReplaceValue(#"Replaced Value31","instance","instnc",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value33" = Table.ReplaceValue(#"Replaced Value32","Instance","Instnc",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value34" = Table.ReplaceValue(#"Replaced Value33","Hour","Hr",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value35" = Table.ReplaceValue(#"Replaced Value34","hour","hr",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value36" = Table.ReplaceValue(#"Replaced Value35","On Demand","OnDemand",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value37" = Table.ReplaceValue(#"Replaced Value36","Reservation","Resv",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value38" = Table.ReplaceValue(#"Replaced Value37","reservation","resv",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value39" = Table.ReplaceValue(#"Replaced Value38","Dedicated","Ded",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value41" = Table.ReplaceValue(#"Replaced Value39","Hours","Hrs",Replacer.ReplaceText,{"Unit"}),
    #"Replaced Value42" = Table.ReplaceValue(#"Replaced Value41","Compute Instance","EC2 Instc",Replacer.ReplaceText,{"Product Family"}),
    #"Replaced Value43" = Table.ReplaceValue(#"Replaced Value42","N. Virginia","Virginia",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value44" = Table.ReplaceValue(#"Replaced Value43","N. California","NorCal",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value45" = Table.ReplaceValue(#"Replaced Value44","-Local","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value46" = Table.ReplaceValue(#"Replaced Value45","(US)","(US-West)",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value47" = Table.ReplaceValue(#"Replaced Value46","NA","",Replacer.ReplaceText,{"Memory"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value47","US East (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value19" = Table.ReplaceValue(#"Replaced Value4","Asia Pacific (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value23" = Table.ReplaceValue(#"Replaced Value19","US West (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value40" = Table.ReplaceValue(#"Replaced Value23","Middle East (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value48" = Table.ReplaceValue(#"Replaced Value40","EU (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value49" = Table.ReplaceValue(#"Replaced Value48","AWS ","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value50" = Table.ReplaceValue(#"Replaced Value49","South America (","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value51" = Table.ReplaceValue(#"Replaced Value50","(","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value52" = Table.ReplaceValue(#"Replaced Value51",")","",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value53" = Table.ReplaceValue(#"Replaced Value52","","0yr",Replacer.ReplaceValue,{"LeaseContractLength"}),
    #"Added Custom" = Table.AddColumn(#"Replaced Value53", "Rsv'd Term", each Text.At([LeaseContractLength],0)),
    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom",{{"Rsv'd Term", Int64.Type}}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Changed Type3",{{"Memory", type number}}),
    #"Replaced Value54" = Table.ReplaceValue(#"Changed Type2",null,0,Replacer.ReplaceValue,{"vCPU"}),
    #"Replaced Value60" = Table.ReplaceValue(#"Replaced Value54","Upto ","<=",Replacer.ReplaceText,{"Dedicated EBS Throughput"}),
    #"Replaced Value61" = Table.ReplaceValue(#"Replaced Value60","Up to ","<=",Replacer.ReplaceText,{"Dedicated EBS Throughput"}),
    #"Replaced Value62" = Table.ReplaceValue(#"Replaced Value61","NA","",Replacer.ReplaceText,{"Dedicated EBS Throughput"}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Replaced Value62", "Instance Type", "Instance Type - Copy"),
    #"Split Column by Delimiter2" = Table.SplitColumn(#"Duplicated Column", "Instance Type - Copy", Splitter.SplitTextByDelimiter(".", QuoteStyle.Csv), {"Instance Type - Copy.1", "Instance Type - Copy.2"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Split Column by Delimiter2",{{"Instance Type - Copy.2", "Instance Size"}}),
    #"Replaced Value63" = Table.ReplaceValue(#"Renamed Columns2",null,"",Replacer.ReplaceValue,{"Instance Size"}),
    #"Renamed Columns3" = Table.RenameColumns(#"Replaced Value63",{{"Instance Type - Copy.1", "FamGen"}}),
    #"Replaced Value55" = Table.ReplaceValue(#"Renamed Columns3",null,0,Replacer.ReplaceValue,{"Memory"}),
    #"Replaced Value56" = Table.ReplaceValue(#"Replaced Value55","Dedicated","Ded Instc",Replacer.ReplaceText,{"Tenancy"}),
    #"Added Conditional Column" = Table.AddColumn(#"Replaced Value56", "InstanceStore (GB)", each if [Storage] = "EBS only" then "" else if [Storage] = "NA" then "" else [Storage]),
    #"Filtered Rows1" = Table.SelectRows(#"Added Conditional Column", each [PurchaseOption] = "No Upfront" or [PurchaseOption] = "All Upfront" or [PurchaseOption] = "Partial Upfront" or [PurchaseOption] = ""),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Filtered Rows1", "InstanceStore (GB)", Splitter.SplitTextByDelimiter(" ", QuoteStyle.Csv), {"InstanceStore (GB).1", "InstanceStore (GB).2"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"InstanceStore (GB).1", type text}, {"InstanceStore (GB).2", type text}}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Changed Type4", "InstanceStore (GB).1", Splitter.SplitTextByDelimiter("x", QuoteStyle.Csv), {"InstanceStore (GB).1.1", "InstanceStore (GB).1.2"}),
    #"Renamed Columns" = Table.RenameColumns(#"Split Column by Delimiter1",{{"InstanceStore (GB).1.1", "#Instance Store Disks"}}),
    #"Replaced Value68" = Table.ReplaceValue(#"Renamed Columns","OnDemand","OD",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value69" = Table.ReplaceValue(#"Replaced Value68","large","lg",Replacer.ReplaceText,{"PriceDescription"}),
    #"Replaced Value57" = Table.ReplaceValue(#"Replaced Value69","","0",Replacer.ReplaceValue,{"#Instance Store Disks"}),
    #"Changed Type6" = Table.TransformColumnTypes(#"Replaced Value57",{{"#Instance Store Disks", Int64.Type}}),
    #"Replaced Value58" = Table.ReplaceValue(#"Changed Type6",null,"0",Replacer.ReplaceValue,{"InstanceStore (GB).1.2"}),
    #"Replaced Value59" = Table.ReplaceValue(#"Replaced Value58",null,"",Replacer.ReplaceValue,{"InstanceStore (GB).2"}),
    #"Changed Type5" = Table.TransformColumnTypes(#"Replaced Value59",{{"InstanceStore (GB).1.2", Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type5",{{"InstanceStore (GB).1.2", "Instance Store (GB)/Disk"}, {"InstanceStore (GB).2", "Instance Store Disk Type"}}),
    #"Added Custom1" = Table.AddColumn(#"Renamed Columns1", "Ttl Instance Store (GB)", each [#"#Instance Store Disks"]*[#"Instance Store (GB)/Disk"]),
    #"Changed Type7" = Table.TransformColumnTypes(#"Added Custom1",{{"Ttl Instance Store (GB)", Int64.Type}}),
    #"Replaced Value64" = Table.ReplaceValue(#"Changed Type7","NA/BYOL","BYOL",Replacer.ReplaceText,{"Pre Installed S/W"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Replaced Value64",{{"Current Generation", "EC2 Gen"}}),
    #"Replaced Value65" = Table.ReplaceValue(#"Renamed Columns4","No","Prev",Replacer.ReplaceText,{"EC2 Gen"}),
    #"Replaced Value66" = Table.ReplaceValue(#"Replaced Value65","Yes","Current",Replacer.ReplaceText,{"EC2 Gen"}),
    #"Replaced Value67" = Table.ReplaceValue(#"Replaced Value66","GovCloud","Gov",Replacer.ReplaceText,{"Location"}),
    #"Replaced Value70" = Table.ReplaceValue(#"Replaced Value67","Moderate","Mod",Replacer.ReplaceText,{"Network Performance"}),
    #"Changed Type8" = Table.TransformColumnTypes(#"Replaced Value70",{{"Instance Capacity - 2xlarge", type text}}),
    #"Replaced Value71" = Table.ReplaceValue(#"Changed Type8",null,"",Replacer.ReplaceValue,{"Instance Capacity - 2xlarge"}),
    #"Changed Type9" = Table.TransformColumnTypes(#"Replaced Value71",{{"Instance Capacity - 4xlarge", type text}}),
    #"Replaced Value72" = Table.ReplaceValue(#"Changed Type9",null,"",Replacer.ReplaceValue,{"Instance Capacity - 4xlarge"}),
    #"Changed Type10" = Table.TransformColumnTypes(#"Replaced Value72",{{"Instance Capacity - large", type text}}),
    #"Replaced Value73" = Table.ReplaceValue(#"Changed Type10",null,"",Replacer.ReplaceValue,{"Instance Capacity - large"}),
    #"Changed Type11" = Table.TransformColumnTypes(#"Replaced Value73",{{"Instance Capacity - medium", type text}}),
    #"Replaced Value74" = Table.ReplaceValue(#"Changed Type11",null,"",Replacer.ReplaceValue,{"Instance Capacity - medium"}),
    #"Changed Type12" = Table.TransformColumnTypes(#"Replaced Value74",{{"Instance Capacity - xlarge", type text}}),
    #"Replaced Value75" = Table.ReplaceValue(#"Changed Type12",null,"",Replacer.ReplaceValue,{"Instance Capacity - xlarge"}),
    #"Removed Columns2" = Table.RemoveColumns(#"Replaced Value75",{"instanceSKU"}),
    #"Changed Type13" = Table.TransformColumnTypes(#"Removed Columns2",{{"StartingRange", type text}}),
    #"Replaced Value76" = Table.ReplaceValue(#"Changed Type13",null,"",Replacer.ReplaceValue,{"StartingRange"}),
    #"Changed Type14" = Table.TransformColumnTypes(#"Replaced Value76",{{"GPU", type text}}),
    #"Replaced Value77" = Table.ReplaceValue(#"Changed Type14",null,"",Replacer.ReplaceValue,{"GPU"}),
    #"Replaced Value78" = Table.ReplaceValue(#"Replaced Value77","Yes","Y",Replacer.ReplaceText,{"Intel AVX Available"}),
    #"Replaced Value79" = Table.ReplaceValue(#"Replaced Value78","Yes","Y",Replacer.ReplaceText,{"Intel AVX2 Available"}),
    #"Replaced Value80" = Table.ReplaceValue(#"Replaced Value79","Yes","Y",Replacer.ReplaceText,{"Intel Turbo Available"}),
    #"Replaced Value81" = Table.ReplaceValue(#"Replaced Value80","Yes","Y",Replacer.ReplaceText,{"Enhanced Networking Supported"}),
    #"Changed Type15" = Table.TransformColumnTypes(#"Replaced Value81",{{"Instance Capacity - xlarge", Int64.Type}, {"Instance Capacity - medium", Int64.Type}, {"Instance Capacity - large", Int64.Type}, {"Instance Capacity - 9xlarge", Int64.Type}, {"Instance Capacity - 8xlarge", Int64.Type}, {"Instance Capacity - 4xlarge", Int64.Type}, {"Instance Capacity - 32xlarge", Int64.Type}, {"Instance Capacity - 2xlarge", Int64.Type}, {"Instance Capacity - 24xlarge", Int64.Type}, {"Instance Capacity - 18xlarge", Int64.Type}, {"Instance Capacity - 16xlarge", Int64.Type}, {"Instance Capacity - 12xlarge", Int64.Type}, {"Instance Capacity - 10xlarge", Int64.Type}}),
    #"Replaced Value83" = Table.ReplaceValue(#"Changed Type15","Linux","Win",Replacer.ReplaceText,{"Operating System"})
in
    #"Replaced Value83"